#labels Featured
=Add a Prompt to Your Existing Text Component=
Simply call `PromptSupport.install("Prompt Text", textComponent)`, where `textComponent` is an instance of `JTextComponent`.

After that, `textComponent`, if it is a `JTextField`, should look like this:

|| Metal || [http://xswingx.googlecode.com/svn/wiki/images/textfield_metal_unfocused.png] ||
|| Windows XP || [http://xswingx.googlecode.com/svn/wiki/images/textfield_xp_unfocused.png] ||
|| Motif || [http://xswingx.googlecode.com/svn/wiki/images/textfield_motif_unfocused.png] ||
|| JGoodies Plastic XP || [http://xswingx.googlecode.com/svn/wiki/images/textfield_plasticxp_unfocused.png] ||

=Use the Prompt Text Components=
If you are creating a new form, you probably want to use a graphical editor like _JFormDesigner_ or _Matisse_ to change you text components properties. In this case it is handy to use one of the prebuilt text components, which support prompt customization via JavaBean properties: [http://xswingx.googlecode.com/svn/trunk/xswingx/src/java/org/jdesktop/xswingx/JXPromptField.java JXPromptField], [http://xswingx.googlecode.com/svn/trunk/xswingx/src/java/org/jdesktop/xswingx/JXPromptArea.java JXPromptArea], or [http://xswingx.googlecode.com/svn/trunk/xswingx/src/java/org/jdesktop/xswingx/JXFormattedPromptField.java JXFormattedPromptField]. These classes simply extend JTextField, JTextArea, or JFormattedTextField respectively, and add properties supported by PromptSupport.

=Customize the Prompt=
==Focus Behavior==
By default, the prompt text will be hidden, when the text component is focused:
[http://xswingx.googlecode.com/svn/wiki/images/textfield_xp_focused_hidden.png]

This behavior can be customized with the `PromptSupport.setFocusBehavior()` method. The prompt text can be hidden, shown, or highlighted when the text component gets the focus (and no text is entered), as indicated in the screenshots below.

|| *FocusBehavior.HIDE_PROMPT* || *FocusBehavior.SHOW_PROMPT* || *FocusBehavior.HIGHLIGHT_PROMPT* || 
|| [http://xswingx.googlecode.com/svn/wiki/images/textfield_xp_focused_hidden.png] || [http://xswingx.googlecode.com/svn/wiki/images/textfield_xp_focused_shown.png] || [http://xswingx.googlecode.com/svn/wiki/images/textfield_xp_focused_highlighted.png] ||

==Font Style and Color==
The font of the prompt text by default is the same as the text component's font, but sometimes you want the prompt text to be different. You can make the prompt text plain, *bold*, _italic_, or both *_bold and italic_* with the `PromptSupport.setPromptFontStyle()` method.

|| *Plain* || *Italic* || *Bold* || *Bold and Italic* ||
|| [http://xswingx.googlecode.com/svn/wiki/images/textfield_xp_unfocused.png] || [http://xswingx.googlecode.com/svn/wiki/images/textfield_xp_italic.png] || [http://xswingx.googlecode.com/svn/wiki/images/textfield_xp_bold.png] || [http://xswingx.googlecode.com/svn/wiki/images/textfield_xp_bolditalic.png] ||

By default, the color used for the prompt text is the text component's disabled text color, but yout can change this with the `PromptSupport.setPromptColor()` method.
`PromptSupport.setPromptColor(Color.RED)` gives you: [http://xswingx.googlecode.com/svn/wiki/images/textfield_xp_red.png]






